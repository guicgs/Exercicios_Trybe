{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","final/04.extra-1.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Board","React","useState","JSON","parse","window","localStorage","getItem","fill","squares","setSquares","useEffect","setItem","stringify","nextValue","xSquaresCount","filter","r","length","calculateNextValue","winner","lines","i","a","b","c","calculateWinner","status","every","Boolean","calculateStatus","renderSquare","className","onClick","square","squaresCopy","selectSquare","Game","App","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","test","_arrayLikeToArray","len","arr2","_slicedToArray","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err"],"mappings":"yLAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,4EIC9F,SAASC,IAAS,IAAD,EACeC,IAAMC,UAClC,kBACEC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,aAAejB,MAAM,GAAGkB,KAAK,SAHzD,mBACRC,EADQ,KACCC,EADD,KAMfT,IAAMU,WAAU,WACdN,OAAOC,aAAaM,QAAQ,UAAWT,KAAKU,UAAUJ,MACrD,CAACA,IAEJ,IAAMK,EAoER,SAA4BL,GAC1B,IAAMM,EAAgBN,EAAQO,QAAO,SAAAC,GAAC,MAAU,MAANA,KAAWC,OAErD,OADsBT,EAAQO,QAAO,SAAAC,GAAC,MAAU,MAANA,KAAWC,SAC5BH,EAAgB,IAAM,IAvE7BI,CAAmBV,GAC/BW,EAyER,SAAyBX,GAWvB,IAVA,IAAMY,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAMH,OAAQI,IAAK,CAAC,IAAD,cACnBD,EAAMC,GADa,GAC9BC,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIhB,EAAQc,IAAMd,EAAQc,KAAOd,EAAQe,IAAMf,EAAQc,KAAOd,EAAQgB,GACpE,OAAOhB,EAAQc,GAGnB,OAAO,KA1FQG,CAAgBjB,GACzBkB,EA0DR,SAAyBP,EAAQX,EAASK,GACxC,OAAOM,EAAM,kBACEA,GACXX,EAAQmB,MAAMC,SAAd,6CAEgBf,GA/DLgB,CAAgBV,EAAQX,EAASK,GAehD,SAASiB,EAAaT,GACpB,OACE,4BAAQU,UAAU,SAASC,QAAS,kBAfxC,SAAsBC,GACpB,IAAId,IAAUX,EAAQyB,GAAtB,CAGA,IAAMC,EAAW,YAAO1B,GACxB0B,EAAYD,GAAUpB,EACtBJ,EAAWyB,IASiCC,CAAad,KACpDb,EAAQa,IAKf,OACE,6BACE,yBAAKU,UAAU,UAAUL,GACzB,yBAAKK,UAAU,aACZD,EAAa,GACbA,EAAa,GACbA,EAAa,IAEhB,yBAAKC,UAAU,aACZD,EAAa,GACbA,EAAa,GACbA,EAAa,IAEhB,yBAAKC,UAAU,aACZD,EAAa,GACbA,EAAa,GACbA,EAAa,IAEhB,4BAAQC,UAAU,UAAUC,QA9BhC,WACEvB,EAAWpB,MAAM,GAAGkB,KAAK,SA6BvB,YAON,SAAS6B,IACP,OACE,yBAAKL,UAAU,QACb,yBAAKA,UAAU,cACb,kBAAChC,EAAD,QA4COsC,UAJf,WACE,OAAO,kBAACD,EAAD,Q,gCC/GT,8CACe,SAASE,EAA4BC,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,YAAiBA,EAAGC,GACtD,IAAIC,EAAI9C,OAAO+C,UAAUC,SAASC,KAAKL,GAAGM,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBF,EAAEO,cAAaL,EAAIF,EAAEO,YAAYC,MAC7C,QAANN,GAAqB,QAANA,EAAoBpD,MAAMO,KAAK6C,GACxC,cAANA,GAAqB,2CAA2CO,KAAKP,GAAW,YAAiBF,EAAGC,QAAxG,K,gCCPa,SAASS,EAAkB7D,EAAK8D,IAClC,MAAPA,GAAeA,EAAM9D,EAAI6B,UAAQiC,EAAM9D,EAAI6B,QAE/C,IAAK,IAAII,EAAI,EAAG8B,EAAO,IAAI9D,MAAM6D,GAAM7B,EAAI6B,EAAK7B,IAC9C8B,EAAK9B,GAAKjC,EAAIiC,GAGhB,OAAO8B,EAPT,mC,8ECIe,SAASC,EAAehE,EAAKiC,GAC1C,OCLa,SAAyBjC,GACtC,GAAIC,MAAMC,QAAQF,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKiC,GACjD,GAAsB,qBAAX5B,QAA4BA,OAAOC,YAAYC,OAAOP,GAAjE,CACA,IAAIiE,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKvE,EAAIK,OAAOC,cAAmB4D,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAET1C,GAAKgC,EAAKpC,SAAWI,GAH8CiC,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBjE,EAAKiC,IAAM,OAAAxB,EAAA,GAA2BT,EAAKiC,IGLjF,WACb,MAAM,IAAIvB,UAAU,6IHIgF","file":"static/js/13.9397219e.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// useState: tic tac toe\n// ðŸ’¯ preserve state in localStorage\n// http://localhost:3000/isolated/final/04.js\n\nimport React from 'react'\n\nfunction Board() {\n  const [squares, setSquares] = React.useState(\n    () =>\n      JSON.parse(window.localStorage.getItem('squares')) || Array(9).fill(null),\n  )\n\n  React.useEffect(() => {\n    window.localStorage.setItem('squares', JSON.stringify(squares))\n  }, [squares])\n\n  const nextValue = calculateNextValue(squares)\n  const winner = calculateWinner(squares)\n  const status = calculateStatus(winner, squares, nextValue)\n\n  function selectSquare(square) {\n    if (winner || squares[square]) {\n      return\n    }\n    const squaresCopy = [...squares]\n    squaresCopy[square] = nextValue\n    setSquares(squaresCopy)\n  }\n\n  function restart() {\n    setSquares(Array(9).fill(null))\n  }\n\n  function renderSquare(i) {\n    return (\n      <button className=\"square\" onClick={() => selectSquare(i)}>\n        {squares[i]}\n      </button>\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n      <button className=\"restart\" onClick={restart}>\n        restart\n      </button>\n    </div>\n  )\n}\n\nfunction Game() {\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board />\n      </div>\n    </div>\n  )\n}\n\nfunction calculateStatus(winner, squares, nextValue) {\n  return winner\n    ? `Winner: ${winner}`\n    : squares.every(Boolean)\n    ? `Scratch: Cat's game`\n    : `Next player: ${nextValue}`\n}\n\nfunction calculateNextValue(squares) {\n  const xSquaresCount = squares.filter(r => r === 'X').length\n  const oSquaresCount = squares.filter(r => r === 'O').length\n  return oSquaresCount === xSquaresCount ? 'X' : 'O'\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ]\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i]\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a]\n    }\n  }\n  return null\n}\n\nfunction App() {\n  return <Game />\n}\n\nexport default App\n","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}